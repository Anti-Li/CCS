{
    "Attribute using recommended pattern": {
        "prefix": "attribute",
        "body": [
            "[System.AttributeUsage(System.AttributeTargets.${1:All}, Inherited = ${2:false}, AllowMultiple = ${3:true})]",
            "sealed class ${4:My}Attribute : System.Attribute",
            "{",
            "    // See the attribute guidelines at",
            "    //  http://go.microsoft.com/fwlink/?LinkId=85236",
            "    readonly string positionalString;",
            "    ",
            "    // This is a positional argument",
            "    public ${4:My}Attribute(string positionalString)",
            "    {",
            "        this.positionalString = positionalString;",
            "        ",
            "        // TODO: Implement code here",
            "        ${5:throw new System.NotImplementedException();}",
            "    }",
            "    ",
            "    public string PositionalString",
            "    {",
            "        get { return positionalString; }",
            "    }",
            "    ",
            "    // This is a named argument",
            "    public int NamedInt { get; set; }",
            "}"
        ],
        "description": "Attribute using recommended pattern"
    },
    "Console.WriteLine": {
        "prefix": "cw",
        "body": [
            "System.Console.WriteLine($0);"
        ],
        "description": "Console.WriteLine"
    },
    "Exception": {
        "prefix": "exception",
        "body": [
            "[System.Serializable]",
            "public class ${1:My}Exception : ${2:System.Exception}",
            "{",
            "    public ${1:My}Exception() { }",
            "    public ${1:My}Exception(string message) : base(message) { }",
            "    public ${1:My}Exception(string message, System.Exception inner) : base(message, inner) { }",
            "    protected ${1:My}Exception(",
            "        System.Runtime.Serialization.SerializationInfo info,",
            "        System.Runtime.Serialization.StreamingContext context) : base(info, context) { }",
            "}"
        ],
        "description": "Exception"
    },
    "MessageBox.Show": {
        "prefix": "mbox",
        "body": [
            "System.Windows.Forms.MessageBox.Show(\"${1:Text}\");$0"
        ],
        "description": "MessageBox.Show"
    },
    "Namespace": {
        "prefix": "namespace",
        "body": [
            "namespace ${1:Name}"
        ],
        "description": "Namespace"
    },
    "Main proc0": {
        "prefix": "main",
        "body": [
            "main = ()",
            "{",
            "    $0",
            "}"
        ],
        "description": "Main proc"
    },
    "Main proc1": {
        "prefix": "main",
        "body": [
            "main = (string[] args)",
            "{",
            "    $0",
            "}"
        ],
        "description": "Main proc"
    },
    "Main proc2": {
        "prefix": "main",
        "body": [
            "main = (): int",
            "{",
            "    $0",
            "}"
        ],
        "description": "Main proc"
    },
    "Main proc3": {
        "prefix": "main",
        "body": [
            "main = (string[] args): int",
            "{",
            "    $0",
            "}"
        ],
        "description": "Main proc"
    }
}